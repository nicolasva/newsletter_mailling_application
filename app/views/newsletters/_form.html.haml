- if @newsletter.errors.any?
 #error_explanation
  %h2
   = "#{pluralize(@newsletter.errors.count, "error")} prohibited this newsletter from being saved:"

  %ul
   - @newsletter.errors.full_messages.each do |msg|
    #li
     = msg

%p
 = f.label(:mailstart_id) 
 %br
 = f.select(:mailstart_id, Mailstart.all.collect{ |p| [p.name, p.id] })

%p
 = f.label(:categoryall_id) 
 %br
 = f.select(:categoryall_id, @newsletter.nil? ? [] : Categoryall.where(:mailstart_id=>@newsletter.mailstart_id).collect{ |p| [p.name, p.id] })

%p
 = f.label(:timeractivate)
 %br
 = f.check_box(:timeractivate)
 %div#id_add_planif_work
  = f.submit("Ajouter une tache planifiÃ© pour cette newsletter", :name=>"addwork_work_planned_newsletter")
  %ul
   - @newsletter.newslettertimingprogrammings.each do |newslettertimingprogramming|
    = content_tag_for :li, newslettertimingprogramming do
     = f.fields_for(:newslettertimingprogrammings, newslettertimingprogramming) do |newslettertimingprogramming_field|
      = render(:partial=>"/newslettertimingprogrammings/templates_newslettertimingprogrammings/form_datetime_programming", :locals => {:f => newslettertimingprogramming_field, :newslettertimingprogramming => newslettertimingprogramming})

%p
 = label_tag(t(".subcontactslist"))
 %br
 %ul#newsletter_subcontact_id
  - unless @newsletter.categoryall.nil?
   - @newsletter.categoryall.subcontacts.each do |subcontact|
    - content_tag_for :li, subcontact do
     - check_box_tag("newsletter[subcontact_ids][]", subcontact.id, @newsletter.subcontacts.include?(subcontact), :id => "newsletter_subcontact_ids_#{subcontact.id}", :class => "class_newsletter_subcontact", :onclick=>"functionlistmail(this.value);")
     - subcontact.name	
%p
 = label_tag(t(".subcontactemailslist")) 
 %br
 %ul#newsletter_mail_id
  - unless @newsletter.emails.empty?
   - @newsletter.emails.each do |email|
    - content_tag_for :li, email do
     = check_box_tag("newsletter[email_ids][]", email.id, @newsletter.emails.include?(email), :id => "id_newsletter_mail_ids_#{email.id}")
     = email.name
%p
 = f.label(:name)
 %br
 = f.text_field(:name)

%p
 = f.label(:content)
 %br
 = f.cktext_area(:content, :width => 800, :height => 800)
